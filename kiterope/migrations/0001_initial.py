# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2016-09-02 16:28
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(default=' ', max_length=2000)),
                ('media', models.URLField(null=True)),
                ('votes', models.IntegerField(null=True)),
                ('author', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Coach',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.FloatField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Goal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default=' ', max_length=200)),
                ('description', models.CharField(default=' ', max_length=200)),
                ('deadline', models.DateTimeField(null=True)),
                ('image', models.ImageField(null=True, upload_to='')),
                ('votes', models.IntegerField(null=True)),
                ('isPublic', models.BooleanField(default=False)),
                ('priority', models.IntegerField(null=True)),
                ('wasAchieved', models.BooleanField(default=False)),
                ('hasMetric', models.BooleanField(default=False)),
                ('coaches', models.ManyToManyField(to='kiterope.Coach')),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(default=True, upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default=' ', max_length=200)),
                ('description', models.CharField(default=' ', max_length=1000)),
                ('isPublic', models.BooleanField(default=False)),
                ('startDate', models.DateTimeField(null=True)),
                ('endDate', models.DateTimeField(null=True)),
                ('author', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=2000, null=True)),
                ('author', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('comments', models.ManyToManyField(to='kiterope.Post')),
                ('goal', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='kiterope.Goal')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.CharField(default=' ', max_length=2000)),
                ('isCoach', models.BooleanField(default=False)),
                ('isStudent', models.BooleanField(default=True)),
                ('images', models.ManyToManyField(to='kiterope.Image')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profiles', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(default=' ', max_length=2000)),
                ('needAnswerBy', models.DateTimeField(null=True)),
                ('media', models.URLField(null=True)),
                ('price', models.IntegerField(null=True)),
                ('answers', models.ManyToManyField(related_name='answers', to='kiterope.Answer')),
                ('author', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Rate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inPersonRate', models.IntegerField(null=True)),
                ('inPersonRateUnit', models.CharField(default='minute', max_length=20)),
                ('realtimeRate', models.IntegerField(null=True)),
                ('realtimeRateUnit', models.CharField(default='minute', max_length=20)),
                ('feedbackRate', models.IntegerField(null=True)),
                ('feedbackTurnaroundTime', models.CharField(default='minute', max_length=20)),
                ('turnaroundUnit', models.CharField(default='minute', max_length=20)),
                ('answerRate', models.IntegerField(null=True)),
                ('activePlanManagementRate', models.IntegerField(null=True)),
                ('activePlanManagementRateUnit', models.CharField(default='minute', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.FloatField(null=True)),
                ('description', models.CharField(max_length=1000, null=True)),
                ('title', models.CharField(max_length=80, null=True)),
                ('isStudentReviewed', models.BooleanField(default=False)),
                ('author', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='author', to=settings.AUTH_USER_MODEL)),
                ('reviewedUser', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reviewedUser', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('startTime', models.DateTimeField(null=True)),
                ('endTime', models.DateTimeField(null=True)),
                ('duration', models.DurationField(null=True)),
                ('mode', models.CharField(default='minute', max_length=20)),
                ('media', models.URLField(null=True)),
                ('isGroup', models.BooleanField(default=False)),
                ('coach', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kiterope.Coach')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coaches', models.ManyToManyField(to='kiterope.Coach')),
                ('goals', models.ManyToManyField(to='kiterope.Goal')),
                ('plans', models.ManyToManyField(to='kiterope.Plan')),
                ('questions', models.ManyToManyField(to='kiterope.Question')),
                ('reviews', models.ManyToManyField(to='kiterope.Review')),
                ('sessions', models.ManyToManyField(to='kiterope.Session')),
            ],
        ),
        migrations.CreateModel(
            name='StudentSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allNotifications', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(default=' ', max_length=200)),
                ('frequency', models.CharField(max_length=20, null=True)),
                ('onSunday', models.BooleanField(default=False)),
                ('onMonday', models.BooleanField(default=False)),
                ('onTuesday', models.BooleanField(default=False)),
                ('onWednesday', models.BooleanField(default=False)),
                ('onThursday', models.BooleanField(default=False)),
                ('onFriday', models.BooleanField(default=False)),
                ('onSaturday', models.BooleanField(default=False)),
                ('startTime', models.DateTimeField(null=True)),
                ('endTime', models.DateTimeField(null=True)),
                ('duration', models.DurationField(null=True)),
                ('wasCompleted', models.BooleanField(default=False)),
                ('plan', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='kiterope.Plan')),
                ('subtasks', models.ManyToManyField(to='kiterope.Task')),
            ],
        ),
        migrations.CreateModel(
            name='Update',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('measurement', models.FloatField(null=True)),
                ('hasMetric', models.BooleanField(default=False)),
                ('description', models.CharField(max_length=1000)),
                ('goal', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='kiterope.Goal')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kiterope.Task')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='student',
            name='settings',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='kiterope.StudentSettings'),
        ),
        migrations.AddField(
            model_name='student',
            name='user',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='session',
            name='students',
            field=models.ManyToManyField(to='kiterope.Student'),
        ),
        migrations.AddField(
            model_name='plan',
            name='tasks',
            field=models.ManyToManyField(related_name='tasks', to='kiterope.Task'),
        ),
        migrations.AddField(
            model_name='goal',
            name='updates',
            field=models.ManyToManyField(related_name='updates', to='kiterope.Update'),
        ),
        migrations.AddField(
            model_name='goal',
            name='user',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='coach',
            name='answers',
            field=models.ManyToManyField(to='kiterope.Question'),
        ),
        migrations.AddField(
            model_name='coach',
            name='planTemplates',
            field=models.ManyToManyField(to='kiterope.Plan'),
        ),
        migrations.AddField(
            model_name='coach',
            name='rates',
            field=models.ManyToManyField(to='kiterope.Rate'),
        ),
        migrations.AddField(
            model_name='coach',
            name='reviews',
            field=models.ManyToManyField(to='kiterope.Review'),
        ),
        migrations.AddField(
            model_name='coach',
            name='sessions',
            field=models.ManyToManyField(related_name='sessions', to='kiterope.Session'),
        ),
        migrations.AddField(
            model_name='coach',
            name='students',
            field=models.ManyToManyField(to='kiterope.Student'),
        ),
        migrations.AddField(
            model_name='answer',
            name='question',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='kiterope.Question'),
        ),
    ]
